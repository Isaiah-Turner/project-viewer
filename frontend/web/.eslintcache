[{"/home/iveta/Stellar/project-viewer/frontend/web/src/index.js":"1","/home/iveta/Stellar/project-viewer/frontend/web/src/App.js":"2","/home/iveta/Stellar/project-viewer/frontend/web/src/reportWebVitals.js":"3","/home/iveta/Stellar/project-viewer/frontend/web/src/components/molecules/Form/Form.js":"4","/home/iveta/Stellar/project-viewer/frontend/web/src/components/molecules/DataTable/DataTable.js":"5","/home/iveta/Stellar/project-viewer/frontend/web/src/api/getAssetInfo.js":"6","/home/iveta/Stellar/project-viewer/frontend/web/src/api/getCorridorInfo.js":"7","/home/iveta/Stellar/project-viewer/frontend/web/src/api/getVolumeInfo.js":"8","/home/iveta/Stellar/project-viewer/frontend/web/src/components/molecules/LabelledInput/LabelledInput.js":"9"},{"size":500,"mtime":1607544370518,"results":"10","hashOfConfig":"11"},{"size":799,"mtime":1607549416695,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1607544370518,"results":"13","hashOfConfig":"11"},{"size":2517,"mtime":1607544370518,"results":"14","hashOfConfig":"11"},{"size":235,"mtime":1607544370518,"results":"15","hashOfConfig":"11"},{"size":225,"mtime":1607544370518,"results":"16","hashOfConfig":"11"},{"size":365,"mtime":1607544370518,"results":"17","hashOfConfig":"11"},{"size":308,"mtime":1607544370518,"results":"18","hashOfConfig":"11"},{"size":1038,"mtime":1607544370518,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1wjbky3",{"filePath":"23","messages":"24","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"/home/iveta/Stellar/project-viewer/frontend/web/src/index.js",[],["43","44"],"/home/iveta/Stellar/project-viewer/frontend/web/src/App.js",["45"],"/home/iveta/Stellar/project-viewer/frontend/web/src/reportWebVitals.js",[],"/home/iveta/Stellar/project-viewer/frontend/web/src/components/molecules/Form/Form.js",[],"/home/iveta/Stellar/project-viewer/frontend/web/src/components/molecules/DataTable/DataTable.js",[],"/home/iveta/Stellar/project-viewer/frontend/web/src/api/getAssetInfo.js",["46"],"export default (baseUrl) => {\n    let assetURL = baseUrl + `/assets`\n    return fetch(assetURL, {\n        method: \"GET\",\n    }).then(resp => {\n        console.log(\"Got response: \", resp)\n        return resp.json();\n    });\n};","/home/iveta/Stellar/project-viewer/frontend/web/src/api/getCorridorInfo.js",["47"],"export default (baseUrl, fromCode, fromIssuer, toCode, toIssuer) => {\n    let corridorURL = baseUrl + `/corridor?sourceCode=${fromCode}&sourceIssuer=${fromIssuer}&destCode=${toCode}&destIssuer=${toIssuer}`\n    return fetch(corridorURL, {\n        method: \"GET\",\n    }).then(resp => {\n        console.log(\"Got response: \", resp)\n        return resp.json();\n    });\n};","/home/iveta/Stellar/project-viewer/frontend/web/src/api/getVolumeInfo.js",["48"],"export default (baseUrl, code, issuer, volumeFrom) => {\n    let volumeURL = baseUrl + `/volume?code=${code}&issuer=${issuer}&volumeFrom=${volumeFrom}`\n    return fetch(volumeURL, {\n        method: \"GET\",\n    }).then(resp => {\n        console.log(\"Got response: \", resp)\n        return resp.json();\n    });\n};","/home/iveta/Stellar/project-viewer/frontend/web/src/components/molecules/LabelledInput/LabelledInput.js",["49"],"import React, { Component } from 'react';\nimport getAssetInfo from '../../../api/getAssetInfo';\n\nclass LabelledInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Choices: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.renderDropdownChoices()\n  }\n\n  renderDropdownChoices = async() => {\n    this.props.assets.then(\n      (response) => {\n        console.log(\"resp\", response)\n        this.setState({\n          Choices: response.results.map((asset, index) => \n            <option key={index} value={JSON.stringify(asset)}>\n              {asset.code}:{asset.alias}\n            </option>\n          )})\n      }\n    )\n  }\n  render(props) {\n    return (\n      <div>\n        <label htmlFor={this.props.id}>{this.props.title}</label>\n        <select type=\"text\" id={this.props.id} name={this.props.id} onChange={this.props.changeHandler}>\n          <option value=\"\">Please select an option.</option>\n          {this.state.Choices}\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default LabelledInput;",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":null,"fatal":true,"severity":2,"message":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":1,"nodeType":"57","endLine":9,"endColumn":3},{"ruleId":"55","severity":1,"message":"56","line":1,"column":1,"nodeType":"57","endLine":9,"endColumn":3},{"ruleId":"55","severity":1,"message":"56","line":1,"column":1,"nodeType":"57","endLine":9,"endColumn":3},{"ruleId":"58","severity":1,"message":"59","line":2,"column":8,"nodeType":"60","messageId":"61","endLine":2,"endColumn":20},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"Parsing error: Cannot find module './parse-with-scope'","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'getAssetInfo' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]